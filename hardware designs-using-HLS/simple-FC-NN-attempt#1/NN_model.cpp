#include "C:\Users\kinsh\AppData\Roaming\Xilinx\Vitis\NN_model.h"
double layer1_w[8][8] = {
		{3.256101012229919434e-01,-2.124899923801422119e-01,1.587742567062377930e-01,8.378497958183288574e-01,-7.416780591011047363e-01,1.295183897018432617e+00,3.051661550998687744e-01,-1.834993660449981689e-01},
		{5.480546355247497559e-01,-5.069006681442260742e-01,4.939712584018707275e-01,5.143267512321472168e-01,-7.519966363906860352e-01,-2.000724822282791138e-01,2.870964109897613525e-01,-4.286745563149452209e-02},
		{-2.109276205301284790e-01,2.041261345148086548e-01,1.133270502090454102e+00,3.734667897224426270e-01,-8.712218701839447021e-02,-7.568448185920715332e-01,1.133538842201232910e+00,-1.073846668004989624e-01},
		{-8.406549692153930664e-01,-1.186758637428283691e+00,1.484332442283630371e+00,-6.381981372833251953e-01,8.311021924018859863e-01,-8.981449604034423828e-01,-5.168761610984802246e-01,-1.204236507415771484e+00},
		{4.308034479618072510e-01,-7.254234552383422852e-01,-1.496768891811370850e-01,-6.082639694213867188e-01,-2.895739078521728516e-01,4.718663990497589111e-01,-6.910949945449829102e-01,-1.041623353958129883e+00},
		{-5.309659838676452637e-01,-2.377315610647201538e-01,2.575839459896087646e-01,3.850691020488739014e-01,-9.494786709547042847e-02,1.013756617903709412e-01,1.889505684375762939e-01,-4.096791744232177734e-01},
		{7.106012701988220215e-01,-1.388807147741317749e-01,-3.704824717715382576e-03,-3.874600231647491455e-01,3.288581669330596924e-01,7.976040989160537720e-02,3.060434758663177490e-01,2.061100751161575317e-01},
		{-3.591672778129577637e-01,-5.312871336936950684e-01,7.530409842729568481e-02,4.978580772876739502e-02,-3.652468323707580566e-01,2.958708107471466064e-01,3.577948212623596191e-01,4.450136125087738037e-01}

};

double layer1_b[8] = {1.408244818449020386e-01,
		2.635280787944793701e-01,
		-1.275752857327461243e-02,
		1.923482269048690796e-01,
		1.533940583467483521e-01,
		8.782017976045608521e-02,
		3.007406294345855713e-01,
		3.135207891464233398e-01
};

double layer2_w[8][10] = {
		{-7.295095175504684448e-02,5.602585673332214355e-01,-2.604522705078125000e-01,-5.478497147560119629e-01,-8.525335788726806641e-01,-3.041109144687652588e-01,-7.457736134529113770e-01,-3.179505467414855957e-01,2.515190243721008301e-01,-1.944823861122131348e+00},
		{2.614051699638366699e-01,-6.767340898513793945e-01,2.566549181938171387e-01,-7.883393019437789917e-02,3.415594995021820068e-01,-5.000949278473854065e-02,5.609893202781677246e-01,8.125974535942077637e-01,-5.700611472129821777e-01,1.353715360164642334e-01},
		{-1.741276867687702179e-02,-3.620993196964263916e-01,2.141768485307693481e-01,1.943490654230117798e-01,5.496069192886352539e-01,-4.984968155622482300e-02,6.768390536308288574e-01,4.779441058635711670e-01,-4.497571885585784912e-01,1.757988184690475464e-01},
		{7.588300108909606934e-01,4.119583964347839355e-01,2.040940076112747192e-01,-5.814957618713378906e-01,4.497649669647216797e-01,-5.319864749908447266e-01,5.089564919471740723e-01,2.039459347724914551e-01,5.956882238388061523e-01,3.647361397743225098e-01},
		{-4.108591675758361816e-01,3.849233314394950867e-02,5.511928796768188477e-01,-4.252675920724868774e-02,-2.660084664821624756e-01,-4.664346873760223389e-01,4.712172746658325195e-01,8.058176040649414062e-01,-5.926489233970642090e-01,-1.341491937637329102e-01},
		{-5.362372398376464844e-01,-8.111807107925415039e-01,5.091849341988563538e-02,-2.926516830921173096e-01,4.330175518989562988e-01,-5.292737483978271484e-01,-3.854124620556831360e-02,2.298860698938369751e-01,-1.845778673887252808e-01,-4.570574462413787842e-01},
		{-3.255375027656555176e-01,-3.767201006412506104e-01,5.055877566337585449e-01,-6.797595024108886719e-01,-2.847567796707153320e-01,-3.367344141006469727e-01,4.259061813354492188e-01,-4.001397266983985901e-02,-6.124379634857177734e-01,-9.994565248489379883e-01},
		{-9.843912124633789062e-01,5.666713118553161621e-01,-3.948098421096801758e-01,-5.943765640258789062e-01,-4.208646416664123535e-01,1.269188802689313889e-02,-3.748470842838287354e-01,-4.121401011943817139e-01,1.154972314834594727e-01,-6.863591670989990234e-01}


};

double layer2_b[10] = {
		3.054831624031066895e-01,
		7.360635697841644287e-02,
		-1.322850491851568222e-02,
		4.625307321548461914e-01,
		6.136587634682655334e-02,
		3.423477709293365479e-02,
		8.518248051404953003e-02,
		2.541444599628448486e-01,
		6.164535135030746460e-02,
		2.782481312751770020e-01

};

double layer3_w[10] = {
		9.323630332946777344e-01,
		-1.146242380142211914e+00,
		1.132563799619674683e-01,
		1.877290010452270508e+00,
		5.167694687843322754e-01,
		9.261978268623352051e-01,
		-8.072323799133300781e-01,
		1.598682284355163574e+00,
		-9.406372308731079102e-01,
		1.068882942199707031e+00

};

double layer3_b = -5.761642009019851685e-02;
void model(double data[8],int &dout)
{
	double layer1_res[8] = {0,0,0,0,0,0,0,0};
	double layer2_res[10] = {0,0,0,0,0,0,0,0,0,0};
	double final_res = 0;
	int i,j;
	layer1:
	for(i = 0; i < 8; i++)
	{
		for(j = 0; j < 8; j++)
		{
			layer1_res[i] += layer1_w[j][i]*data[i];
		}
		layer1_res[i] += layer1_b[i];
		if(layer1_res[i] < 0)
			layer1_res[i] = 0;
	}
	layer2:
	for(i = 0; i < 10; i++)
	{
		for(j = 0; j < 8; j++)
		{
			layer2_res[i] += layer2_w[j][i]*layer1_res[j];
		}
		layer2_res[i] += layer2_b[i];
		if(layer2_res[i] < 0)
			layer2_res[i] = 0;
	}
	layer3:
	for(i = 0; i < 10; i++)
	{
		final_res += layer2_res[i]*layer3_w[i];
	}
	final_res += layer3_b;
	final_res = -1*final_res;
	sigmoid:
	final_res = 1/(1 + pow(2.71828182845,final_res));
	if(final_res < 0.5)
		dout = 0;
	else dout = 1;
}
